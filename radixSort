#include "ReadWriter.h"
#include <vector>
//iostream, fstream включены в ReadWriter.h
using namespace std;

const int bitsword = 32;
const int bitsbyte = 8;
const int bytesword = bitsword / bitsbyte;
// Основание - 256
const int R = 1 << bitsbyte;

int digit(int A, int B) {
    return (A >> bitsbyte * (bytesword - B - 1) & (R - 1));
}

// Функция цифровой сортировки
void radixSort(int *numbers, int array_size) {
    // Решение подсмотренно из учебника
    // Седжвик, Роберт. Алгоритмы на С++. : Пер. с англ. – М. :   ООО «И.Д. Вильямс», 2014. — 1056 с.,
    // (страницы 401 - 419, 425 - 427)
    // ссылка на который указана в ЛМС.

    vector<int> supportArr(R + 1);
    vector<int> resArr(array_size);

    for (int d = bytesword - 1; d >= 0; d--) {
        for (int i = 0; i < R; i++) {
            supportArr[i] = 0;
        }
        for (int i = 0; i < array_size; i++) {
            supportArr[digit(numbers[i], d) + 1]++;
        }
        for (int i = 1; i < R; i++) {
            supportArr[i] += supportArr[i - 1];
        }
        for (int i = 0; i < array_size; i++) {
            resArr[supportArr[digit(numbers[i], d)]++] = numbers[i];
        }
        for (int i = 0; i < array_size; i++) {
            numbers[i] = resArr[i];
        }
    }
}

//Не удалять и не изменять метод main без крайней необходимости.
//Необходимо добавить комментарии, если все же пришлось изменить метод main.
int main() {
    //Объект для работы с файлами
    ReadWriter rw;

    int *brr = nullptr;
    int n;

    //Ввод из файла
    n = rw.readInt();

    brr = new int[n];
    rw.readArray(brr, n);

    //Запуск сортировки, ответ в том же массиве (brr)
    radixSort(brr, n);

    //Запись в файл
    rw.writeArray(brr, n);

    //освобождаем память
    delete[] brr;

    return 0;
}



