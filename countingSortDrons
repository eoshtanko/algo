#include "ReadWriter.h"
#include <vector>
//iostream, fstream включены в ReadWriter.h
using namespace std;

int findMax(const int *array, int array_size);

int findMin(const int *array, int array_size);

void countingSortDrons(int *id, int *weight, int array_size);

int findMax(const int *array, int array_size) {
    int max = 0;
    for (int i = 0; i < array_size; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}

int findMin(const int *array, int array_size) {
    int min = 0;
    for (int i = 0; i < array_size; i++) {
        if (array[i] < min) {
            min = array[i];
        }
    }
    return min;
}

void countingSortDrons(int *id, int *weight, int array_size) {
    int numberOfDiff = findMax(weight, array_size) - findMin(weight, array_size) + 1;
    vector<int> supportArrWeight(numberOfDiff);
    vector<int> resArrId(array_size);
    vector<int> resArrWeight(array_size);
    for (int i = 0; i < numberOfDiff; i++) {
        supportArrWeight[i] = 0;
    }
    for (int i = 0; i < array_size; i++) {
        supportArrWeight[weight[i]]++;
    }
    for (int i = numberOfDiff - 2; i >= 0; i--) {
        supportArrWeight[i] += supportArrWeight[i + 1];
    }
    for (int i = array_size - 1; i >= 0; i--) {
        resArrWeight[supportArrWeight[weight[i]] - 1] = weight[i];
        resArrId[supportArrWeight[weight[i]] - 1] = id[i];
        supportArrWeight[weight[i]] = supportArrWeight[weight[i]] - 1;
    }
    for (int i = 0; i < array_size; i++) {
        weight[i] = resArrWeight[i];
        id[i] = resArrId[i];
    }
}


//Не удалять и не изменять метод main без крайней необходимости.
//Необходимо добавить комментарии, если все же пришлось изменить метод main.
int main() {
    //Объект для работы с файлами
    ReadWriter rw;

    int *arrId = nullptr;
    int *arrWeight = nullptr;
    int n;

    //Ввод из файла
    n = rw.readInt();

    arrId = new int[n];
    arrWeight = new int[n];

    rw.readArrays(arrId, arrWeight, n);

    countingSortDrons(arrId, arrWeight, n);

    //Запись в файл
    rw.writeArrays(arrId, arrWeight, n);

    //освобождаем память
    delete[] arrId;
    delete[] arrWeight;

    return 0;
}


